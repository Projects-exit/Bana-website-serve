{"version":3,"file":"static/js/470.dfcec68a.chunk.js","mappings":"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","sources":["components/Buttons/Primary.js","components/Buttons/Secondary.js","components/Headings.js","components/time.js","components/useMobile.js","pages/Events/Content.js","pages/Events/index.js","pages/Events/initEvents.js"],"sourcesContent":["import React from 'react'\n\nexport default function Primary(props) {\n    \n    const {label = \"Button\", onClick = () => {}, className = \"\", color=\"bg-[#1D337A]\"} = props\n\n    return (\n        <div \n            onClick={onClick}\n            className={`flex flex-col items-center justify-center  text-white ${color} rounded-[12px] p-2 text-center font-bold cursor-pointer ${className}`}>\n            {label}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Primary(props) {\n    \n    const {label = \"Button\", onClick = () => {}, className = \"\"} = props\n\n    return (\n        <div \n            onClick={onClick}\n            className={`flex flex-col justify-center items-center inter rounded-[10px] bg-[#A0E3E8] text-[#27386C] p-2  text-center font-bold cursor-pointer ${className}`}>\n            {label}\n        </div>\n    )\n}\n","export const SubHeading = (props) => ( <div className={`text-[24px] lg:text-[32px] leading-[42px] text-secondary font-bold ${props.className}`}>\n{props.children}\n</div>)","export const formatDate = (date, time = true) => {\n\n    const _date = new Date(date)\n\n    return `${('0' + _date.getDate()).slice(-2)}-${('0' + (_date.getMonth() + 1)).slice(-2)}-${_date.getFullYear()} `\n}\n\nexport const getMonth = (date) => {\n    const _months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    const _date = new Date(date)\n    return _months[_date.getMonth()]\n}","import React, {useState, useEffect} from 'react'\n\nexport default function useMobile(breakWidth = 768) {\n    \n    const [width, setWidth] = useState(window.innerWidth);\n\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n\n    const isMobile = width <= breakWidth;\n\n    return {isMobile }\n}\n","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nimport useMobile from 'components/useMobile'\n\nimport MarkdownView from 'react-showdown'\n\nimport { SubHeading } from 'components/Headings'\nimport Secondary from 'components/Buttons/Secondary'\nimport Primary from 'components/Buttons/Primary'\n\nimport { getImage, truncate } from 'components/getImage'\nimport { formatDate } from 'components/time'\n\nimport { MutatingDots } from 'react-loader-spinner'\n\n\nexport default function Content(props) {\n\n    const { pageData, eventList = {}, loading } = props\n\n    const { isMobile } = useMobile()\n    const navigate = useNavigate()\n    const [seeMore, setSeeMore] = useState(false)\n\n    const _upcomingEvents = pageData?.upcoming_event || []\n    // const _pastEvents = pageData?.upcoming_event?.filter(item => item.event_type === \"past_event\" && item.publishedAt !== null) || []\n\n    const _pastEvents = eventList?.items?.filter(i => !_upcomingEvents.filter(y => y.id === i.id).length) || [];\n    let _pastEvents_items = [..._pastEvents]\n\n\n    if (seeMore) {\n        // _pastEvents = [..._pastEvents].slice(0,3)\n    } else {\n        _pastEvents_items = [..._pastEvents].slice(0, 3)\n    }\n\n    const redirectRoute = (id) => {\n        navigate(`/event/viewer/${id}`)\n    }\n\n    // console.log(_upcomingEvents)\n    const ComingEventCard = ({ item }) => {\n        return (\n            <div key={item.id} className=\"h-full\">\n                <div onClick={() => redirectRoute(item.id)} className=\"cursor-pointer flex flex-col justify-between\">\n                    <div className=\"relative\">\n                        {/* <div className=\"absolute rounded-2xl left-0 top-0 h-full w-full bg-[#1D337A] opacity-30\"> </div> */}\n                        <div className=\"absolute  z-[5] flex flex-col items-center justify-center h-[48px] left-0 bottom-0  bg-[#C5BBF0] text-[#252529] uppercase text-[24px] font-[700] px-[30px] \">\n                            Upcoming\n                        </div>\n                        <div className=\"relative overflow-hidden rounded-2xl \">\n\n                            <img\n                                alt={item.thumbnail?.url}\n                                src={getImage(item.thumbnail?.url, \"assets/sample/projects.png\")}\n                                className=' w-full  h-fit blur-xl  max-h-[450px] bg-slate-100 min-h-[200px] rounded-[20px] text-xs ' />\n                            <img\n                                alt={item.thumbnail?.url}\n                                src={getImage(item.thumbnail?.url, \"assets/sample/projects.png\")}\n                                className='absolute w-full sm:h-fit left-0 top-0 z-[4]' />\n                        </div>\n                        {/* <div className=\"w-full h-full overflow-hidden \">\n                    </div> */}\n                    </div>\n                    <div className=\"pt-[30px] text-[14px] text-[#C4C4C4] font-[600]\">\n                        {/* {formatDate(item.updatedAt)} */}\n                        {item.date ? formatDate(item.date) : formatDate(item.updatedAt)}\n                    </div>\n                    <div className=\"pt-[6px] text-[24px] font-bold\">\n                        {item.heading}\n                    </div>\n                    <div className=\"pt-[6px] text-[14px] max-w-[414px]\">\n                        <MarkdownView markup={truncate(item.sub_heading, 90)} />\n                    </div>\n                </div>\n                <div className=\"pt-[6px]\">\n                    <a href={item.link} target=\"_blank\">\n                        <Secondary label=\"Register now\" className=\" md:max-w-[300px] font-[600]\" />\n                    </a>\n                </div>\n            </div>\n        )\n    }\n\n\n    return (\n        <div className='container mx-auto'>\n            {_upcomingEvents.length > 0 && <>\n                <div className=\"pt-[15px] lg:pt-[40px]\">\n                    <SubHeading>\n                        <MarkdownView markup={pageData?.heading_1} className=\"text-[32px] inter font-[700]\" />\n                    </SubHeading>\n                </div>\n                {/* {console.log(_upcomingEvents.length)} */}\n                <div className=\"\">\n                    <div className={`grid grid-cols-1 ${_upcomingEvents?.length <= 1 ? \"md:grid-cols-1\" : \"md:grid-cols-2\"}  gap-4 gap-x-[10px] pt-[10px] `}>\n                        {_upcomingEvents?.map(item => {\n                            return (<ComingEventCard key={item.id} item={item} />)\n                        })}\n                    </div>\n                </div>\n            </>\n            }\n            {\n                loading && <div className='w-fit text-center mx-auto pt-[40px]'>\n                    <MutatingDots\n                        height=\"100\"\n                        width=\"100\"\n                        color=\"#595EA4\"\n                        secondaryColor='#7CC7DE'\n                        radius='12.5'\n                        ariaLabel=\"mutating-dots-loading\"\n                        wrapperStyle={{}}\n                        wrapperClass=\"\"\n                        visible={true}\n                    />\n                </div>\n            }\n            {_pastEvents.length > 0 && <>\n                <div className=\"pt-[60px] font-[700]\">\n                    <SubHeading>\n                        <MarkdownView markup={pageData?.heading_2} />\n                    </SubHeading>\n                </div>\n\n                <div className=\"\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 gap-x-[13px] pt-[20px]\">\n                        {_pastEvents_items?.map(item => {\n                            return (\n                            <div key={item.id} \n                                onClick={() => navigate(`/event/viewer/${item.id}`)}\n                                className=\"h-full flex flex-col justify-between cursor-pointer\">\n                                <div className=\"relative overflow-hidden rounded-2xl sm:h-[200px]\">\n                                    {/* <div className=\"absolute rounded-2xl left-0 top-0 h-full w-full bg-[#1D337A] opacity-30\"> </div> */}\n                                    <img src={getImage(item.thumbnail?.url, \"assets/sample/projects.png\")} alt={item.thumbnail?.url} className='blur-xl rounded-2xl w-full h-full w-full min-h-[100px]' />\n                                    <img src={getImage(item.thumbnail?.url, \"assets/sample/projects.png\")} alt={item.thumbnail?.url} className='absolute left-0 top-0  rounded-2xl w-full  sm:h-fit_' />\n                                </div>\n                                <div className=\"pt-[20px] text-[12px] text-[#C4C4C4] font-[600]\">\n                                    {/* {formatDate(item.updatedAt)} */}\n                                    {item.date ? formatDate(item.date) : formatDate(item.createdAt)}\n                                </div>\n                                <div className=\"pt-[6px] text-[20px] font-bold\">\n                                    {item.heading}\n                                </div>\n                                <div className=\"pt-[6px] text-[12px] min-h-[40px] \">\n                                    <MarkdownView markup={truncate((item.sub_heading || \"\"), 90)} />\n                                </div>\n                                <div className=\"pt-[6px]\">\n                                    {/* <Link to={`/viewer/event/${item.id}`}> */}\n                                        <Secondary label=\"Learn more\" className=\"md:max-w-[400px]\" />\n                                    {/* </Link> */}\n                                </div>\n                            </div>)\n                        })}\n                    </div>\n                </div>\n                {\n                    // ((isMobile && _pastEvents.length > 3) || (!isMobile && _pastEvents.length > 6)) &&\n                    ((_pastEvents.length > 3)) &&\n                    <div className=\"pt-[60px]\">\n                        <Primary\n                            onClick={() => setSeeMore(!seeMore)}\n                            label={seeMore ? \"See less\" : \"See more\"}\n                            className=\"mx-auto md:max-w-[316px] text-[16px] py-[11px] px-[71px]\" />\n                    </div>\n                }\n            </>\n            }\n            <div className=\"pb-[80px]\"></div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\n\nimport { Helmet } from 'react-helmet';\n// Layout\nimport NavBar from 'components/Navbar'\nimport Footer from 'components/Footer'\n\nimport Content from './Content'\n\n// import { eventsPage } from './data'\nimport { useScrollBehaviours } from 'components/useScrollBehaviours'\nimport useStoreData from 'store/storeData'\n\nimport InitEvents from './initEvents';\n\n\nexport default function Index(props) {\n\n    const { ScrollToTop } = useScrollBehaviours()\n    const { storeData } = useStoreData()\n    const eventsPage = storeData?.eventsPage || []\n    const eventList = storeData?.eventList || {}\n\n\n    const { fetchdata, loading : eventLoading} = InitEvents()\n\n    useEffect(() => {\n        ScrollToTop()\n    }, [])\n\n    useEffect(() => {\n        if(!eventList?.items){\n            fetchdata()\n        }\n    },[])\n\n    // console.log(eventsPage)\n\n    return (\n        <>\n            <NavBar />\n            <Helmet>\n                <title> Events - BANA – Business Angel Network of Armenia  </title>\n                <meta\n                    name=\"description\"\n                    content=\"We provide a platform for investors to meet and cooperate with their peers, and connect them with promising startups and entrepreneurs.\"\n                />\n            </Helmet>\n            <Content pageData={eventsPage} loading={eventLoading} eventList={eventList} />\n            <Footer />\n        </>\n    )\n}\n","import React, {useEffect, useState, useContext} from 'react'\nimport {  Store } from 'store/websiteDataStore'\n\n\nexport default function InitEvents(props) {\n    \n    const _store = useContext(Store)\n\n    const [loading, setLoading] = useState(false)\n    const [error, seterror] = useState(false)\n\n    const fetchdata = async() => {\n        try{\n          setLoading(true)\n          const res = await fetch(`${process.env.REACT_APP_URL}/api/home-page/events`)\n          const data = await res.json()\n          // console.log(data)\n          _store.dispatch(\n            {\n              type: 'initEvents',\n              payload: data?.data\n            }\n          )\n          setLoading(false)\n        } catch(ex){\n          seterror(true)\n        }\n    }\n\n    // useEffect(() => {\n    //     // fetchdata()\n    // }, [])\n\n    return {fetchdata, loading, error}\n}\n"],"names":["Primary","props","label","onClick","className","color","SubHeading","children","formatDate","date","_date","Date","getDate","slice","getMonth","getFullYear","useMobile","breakWidth","useState","window","innerWidth","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","isMobile","Content","pageData","eventList","loading","navigate","useNavigate","seeMore","setSeeMore","_upcomingEvents","upcoming_event","_pastEvents","items","filter","i","y","id","length","_pastEvents_items","ComingEventCard","item","alt","thumbnail","url","src","getImage","updatedAt","heading","markup","truncate","sub_heading","href","link","target","Secondary","heading_1","map","height","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","heading_2","createdAt","Index","ScrollToTop","useScrollBehaviours","storeData","useStoreData","eventsPage","_store","useContext","Store","setLoading","error","seterror","fetchdata","fetch","process","res","json","data","dispatch","type","payload","InitEvents","eventLoading","Helmet","name","content","Footer"],"sourceRoot":""}